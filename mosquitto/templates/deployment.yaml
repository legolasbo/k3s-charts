apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}
  name: {{ .Release.Name }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      initContainers:
        - name: set-passwd-ownership
          image: alpine
          command: [ "sh", "-c", "cp /secret/* /passwd && chown -R 1883:1883 /passwd && chmod -R 0700 /passwd" ]
          volumeMounts:
            - mountPath: /secret
              name: {{ .Release.Name }}-passwd
            - mountPath: /passwd
              name: passwd
      containers:
        - image: eclipse-mosquitto
          imagePullPolicy: IfNotPresent
          name: {{ .Release.Name }}
          ports:
            - containerPort: 1883
              hostPort: 1883
            - containerPort: 8080
              hostPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /mosquitto
              name: {{ .Release.Name}}
            - mountPath: /etc/mosquitto/passwd
              name: passwd
              subPath: passwd
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1883
      terminationGracePeriodSeconds: 30
      volumes:
        - name: {{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}
        - name: passwd
          emptyDir:
            sizeLimit: 1M
        - name: {{ .Release.Name }}-passwd
          secret:
            secretName: {{ .Release.Name }}